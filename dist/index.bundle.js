!function(e){function t(t){for(var r,s,a=t[0],l=t[1],c=t[2],u=0,f=[];u<a.length;u++)s=a[u],o[s]&&f.push(o[s][0]),o[s]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(d&&d(t);f.length;)f.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,a=1;a<n.length;a++){var l=n[a];0!==o[l]&&(r=!1)}r&&(i.splice(t--,1),e=s(s.s=n[0]))}return e}var r={},o={0:0},i=[];function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=r,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="";var a=window.webpackJsonp=window.webpackJsonp||[],l=a.push.bind(a);a.push=t,a=a.slice();for(var c=0;c<a.length;c++)t(a[c]);var d=l;i.push([2,1]),n()}({2:function(e,t,n){"use strict";n.r(t);var r=n(0);var o=class extends r.Mesh{constructor(e,t,n,r){super(e,t),this.colour=n,this.side=r}get hex(){return this.colour}set hex(e){this.colour=e}};var i=async(e,t=!1)=>{const n=new r.Group;return await new Promise((i,s)=>{(new r.SVGLoader).load(e,e=>{for(let i of e){let e={steps:2,depth:1e3,bevelEnabled:!1},s=new r.MeshBasicMaterial({color:i.color,depthWrite:!1,wireframe:!0}),a=i.toShapes(!0);for(let l of a){const a=new r.ExtrudeGeometry(l,e),c=new o(a,s,i.color.getHex(),t);n.add(c)}}t?(n.rotation.y=90*Math.PI/180,n.rotation.z=180*Math.PI/180):n.rotation.z=180*Math.PI/180,(new r.Box3).setFromObject(n).getCenter(n.position).multiplyScalar(-1),i(n)},e=>{console.log(e.loaded/e.total*100+"% loaded")},e=>{s(e)})}),n};const s=n(1)(r);var a=(e,t,n,r="intersect")=>{const o=new s(e),i=new s(t);let a=null;switch(r){case"intersect":a=o.intersect(i);break;case"union":a=o.union(i);break;case"subtract":a=o.subtract(i);break;default:console.warn(`${r} is not a supported operation`)}const l=a.toMesh();return l.material=n,l.castShadow=!0,l};const l=(e,t)=>{const n={fronts:[],sides:[],hex:e[0].hex},o=e.map(e=>e);for(;o.length;){const e=o.splice(0,1)[0];e.hex===n.hex&&(e.side?n.sides.push(e):n.fronts.push(e))}e=e.filter(e=>e.hex!==n.hex);for(let e of n.fronts)for(let o of n.sides){const i=a(e,o,new r.MeshLambertMaterial({color:n.hex}));t.push(i)}e.length?l(e,t):e=null};var c=l;const d=new r.WebGLRenderer({canvas:document.querySelector("canvas")}),u=new r.Scene,f=new r.PerspectiveCamera(50,window.innerWidth/window.innerHeight,.1,1e3),h=new r.PointLight(16777215,1,4e3);d.setSize(window.innerWidth,window.innerHeight-80),d.setPixelRatio(window.devicePixelRatio),f.position.set(100,100,-200),new r.OrbitControls(f),h.position.set(10,-100,0),u.add(h,new r.AmbientLight(4210752));const p=()=>{requestAnimationFrame(p),d.render(u,f)};p();const g=document.getElementById("front_svg"),w=document.getElementById("side_svg"),m={front:null,side:null},b=e=>{const t=new FileReader;t.readAsDataURL(e.srcElement.files[0]),t.onload=(()=>{for(let t of e.target.parentNode.children)"IMG"===t.nodeName&&e.target.parentNode.removeChild(t);const n=document.createElement("img");n.setAttribute("src",t.result),e.target.parentNode.append(n),"front"===e.target.name&&(m.front=t.result,e.target.previousElementSibling.innerHTML="change front image"),"side"===e.target.name&&(m.side=t.result,e.target.previousElementSibling.innerHTML="change side image"),null!=m.front&&null!=m.side&&(e.target.parentNode.parentNode.classList.add("chosen"),Promise.all([i(m.front),i(m.side,!0)]).then(e=>{let t=new r.Scene;const n=[];for(const n of e)for((new r.Box3).setFromObject(n).getCenter(n.position).multiplyScalar(-1);n.children.length;)r.SceneUtils.detach(n.children[0],n,t);c(t.children,n);const o=new r.Group;for(let e of n)o.add(e);u.add(o)}).catch(e=>{console.log(e)}))})};g.addEventListener("change",b),w.addEventListener("change",b)}});